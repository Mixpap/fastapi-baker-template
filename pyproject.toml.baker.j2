[project]
name = "{{project_name|lower|replace(' ', '-')}}"
version = "0.1.0"
description = "{{project_name}} - A FastAPI application"
readme = "README.md"
authors = [
    {name = "{{project_author}}"}
]
requires-python = ">=3.11"
dependencies = [
    "fastapi[standard]>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "loguru>=0.7.3"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=6.2.1",
    "httpx>=0.25.0",  # For testing async requests
    "ruff>=0.1.0",
    "typos>=1.16.0"
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=6.2.1",
    "httpx>=0.25.0",
    "ruff>=0.1.0",
    "typos>=1.16.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["backend"]


[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "-q", 
    "--strict-markers",
    "--strict-config",
]
testpaths = ["backend/tests"]
pythonpath = ["."]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "unit: Unit tests that don't require external services",
    "integration: Integration tests that may require external services", 
    "slow: Tests that take longer to run"
]
